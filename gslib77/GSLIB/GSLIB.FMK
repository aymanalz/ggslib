PROJ = GSLIB
DEBUG = 1
PROGTYPE = 1
CALLER = 
ARGS = 
DLLS = 
D_RCDEFINES = -d_DEBUG
R_RCDEFINES = -dNDEBUG
ORIGIN = F32VWB
ORIGIN_VER = 1.00
PROJPATH = C:\CLAYTON\GSLIB\GSLIB\
KNARF = 
F32 = fl32
F32FLAGS_D_DEXEUB = /Zi
F32FLAGS_R_DEXEUB = /Ox /DNDEBUG
F32FLAGS_D_LIB = /Zi
F32FLAGS_R_LIB = /Ox /DNDEBUG
L32FLAGS_D_DEXEUB = -machine:i386 -base:0x00010000 -subsystem:console -entry:mainCRTStartup -debug:full -debugtype:cv4
L32FLAGS_R_DEXEUB = -machine:i386 -base:0x00010000 -subsystem:console -entry:mainCRTStartup
LIBS_D_BEXE = libf.lib libc.lib kernel32.lib ntdll.lib
LIBS_R_BEXE = libf.lib libc.lib kernel32.lib ntdll.lib
RUNFLAGS = 
OBJS_EXT = 
LIBS_EXT = 
!if "$(DEBUG)" == "1"
F32FLAGS = $(F32FLAGS_D_LIB)
L32FLAGS = 
LIBS = 
!else
F32FLAGS = $(F32FLAGS_R_LIB)
L32FLAGS = 
LIBS = 
!endif
SBRS = ACORNI.SBR \
		BACKTR.SBR \
		BEYOND.SBR \
		BLUE.SBR \
		CHKNAM.SBR \
		CHKTITLE.SBR \
		COVA3.SBR \
		DLOCATE.SBR \
		DPOWINT.SBR \
		DSORTEM.SBR \
		GAUINV.SBR \
		GCUM.SBR \
		GETINDX.SBR \
		GETZ.SBR \
		GREEN.SBR \
		HEXA.SBR \
		KSOL.SBR \
		KTSOL.SBR \
		LOCATE.SBR \
		NSCORE.SBR \
		NUMTEXT.SBR \
		ORDREL.SBR \
		PICKSUPR.SBR \
		POWINT.SBR \
		PSFILL.SBR \
		PSLINE.SBR \
		PSTEXT.SBR \
		RAND.SBR \
		RED.SBR \
		RESC.SBR \
		SCAL.SBR \
		SETROT.SBR \
		SETSUPR.SBR \
		SORTEM.SBR \
		SQDIST.SBR \
		SRCHSUPR.SBR \
		STRLEN.SBR


ACORNI_DEP = 

BACKTR_DEP = 

BEYOND_DEP = 

BLUE_DEP = 

CHKNAM_DEP = 

CHKTITLE_DEP = 

COVA3_DEP = 

DLOCATE_DEP = 

DPOWINT_DEP = 

DSORTEM_DEP = 

GAUINV_DEP = 

GCUM_DEP = 

GETINDX_DEP = 

GETZ_DEP = 

GREEN_DEP = 

HEXA_DEP = 

KSOL_DEP = 

KTSOL_DEP = 

LOCATE_DEP = 

NSCORE_DEP = 

NUMTEXT_DEP = 

ORDREL_DEP = 

PICKSUPR_DEP = 

POWINT_DEP = 

PSFILL_DEP = 

PSLINE_DEP = 

PSTEXT_DEP = 

RAND_DEP = 

RED_DEP = 

RESC_DEP = 

SCAL_DEP = 

SETROT_DEP = 

SETSUPR_DEP = 

SORTEM_DEP = 

SQDIST_DEP = 

SRCHSUPR_DEP = 

STRLEN_DEP = 

all:	$(PROJ).LIB

ACORNI.OBJ:	ACORNI.FOR $(ACORNI_DEP)
	$(F32) $(F32FLAGS) /c ACORNI.FOR

BACKTR.OBJ:	BACKTR.FOR $(BACKTR_DEP)
	$(F32) $(F32FLAGS) /c BACKTR.FOR

BEYOND.OBJ:	BEYOND.FOR $(BEYOND_DEP)
	$(F32) $(F32FLAGS) /c BEYOND.FOR

BLUE.OBJ:	BLUE.FOR $(BLUE_DEP)
	$(F32) $(F32FLAGS) /c BLUE.FOR

CHKNAM.OBJ:	CHKNAM.FOR $(CHKNAM_DEP)
	$(F32) $(F32FLAGS) /c CHKNAM.FOR

CHKTITLE.OBJ:	CHKTITLE.FOR $(CHKTITLE_DEP)
	$(F32) $(F32FLAGS) /c CHKTITLE.FOR

COVA3.OBJ:	COVA3.FOR $(COVA3_DEP)
	$(F32) $(F32FLAGS) /c COVA3.FOR

DLOCATE.OBJ:	DLOCATE.FOR $(DLOCATE_DEP)
	$(F32) $(F32FLAGS) /c DLOCATE.FOR

DPOWINT.OBJ:	DPOWINT.FOR $(DPOWINT_DEP)
	$(F32) $(F32FLAGS) /c DPOWINT.FOR

DSORTEM.OBJ:	DSORTEM.FOR $(DSORTEM_DEP)
	$(F32) $(F32FLAGS) /c DSORTEM.FOR

GAUINV.OBJ:	GAUINV.FOR $(GAUINV_DEP)
	$(F32) $(F32FLAGS) /c GAUINV.FOR

GCUM.OBJ:	GCUM.FOR $(GCUM_DEP)
	$(F32) $(F32FLAGS) /c GCUM.FOR

GETINDX.OBJ:	GETINDX.FOR $(GETINDX_DEP)
	$(F32) $(F32FLAGS) /c GETINDX.FOR

GETZ.OBJ:	GETZ.FOR $(GETZ_DEP)
	$(F32) $(F32FLAGS) /c GETZ.FOR

GREEN.OBJ:	GREEN.FOR $(GREEN_DEP)
	$(F32) $(F32FLAGS) /c GREEN.FOR

HEXA.OBJ:	HEXA.FOR $(HEXA_DEP)
	$(F32) $(F32FLAGS) /c HEXA.FOR

KSOL.OBJ:	KSOL.FOR $(KSOL_DEP)
	$(F32) $(F32FLAGS) /c KSOL.FOR

KTSOL.OBJ:	KTSOL.FOR $(KTSOL_DEP)
	$(F32) $(F32FLAGS) /c KTSOL.FOR

LOCATE.OBJ:	LOCATE.FOR $(LOCATE_DEP)
	$(F32) $(F32FLAGS) /c LOCATE.FOR

NSCORE.OBJ:	NSCORE.FOR $(NSCORE_DEP)
	$(F32) $(F32FLAGS) /c NSCORE.FOR

NUMTEXT.OBJ:	NUMTEXT.FOR $(NUMTEXT_DEP)
	$(F32) $(F32FLAGS) /c NUMTEXT.FOR

ORDREL.OBJ:	ORDREL.FOR $(ORDREL_DEP)
	$(F32) $(F32FLAGS) /c ORDREL.FOR

PICKSUPR.OBJ:	PICKSUPR.FOR $(PICKSUPR_DEP)
	$(F32) $(F32FLAGS) /c PICKSUPR.FOR

POWINT.OBJ:	POWINT.FOR $(POWINT_DEP)
	$(F32) $(F32FLAGS) /c POWINT.FOR

PSFILL.OBJ:	PSFILL.FOR $(PSFILL_DEP)
	$(F32) $(F32FLAGS) /c PSFILL.FOR

PSLINE.OBJ:	PSLINE.FOR $(PSLINE_DEP)
	$(F32) $(F32FLAGS) /c PSLINE.FOR

PSTEXT.OBJ:	PSTEXT.FOR $(PSTEXT_DEP)
	$(F32) $(F32FLAGS) /c PSTEXT.FOR

RAND.OBJ:	RAND.FOR $(RAND_DEP)
	$(F32) $(F32FLAGS) /c RAND.FOR

RED.OBJ:	RED.FOR $(RED_DEP)
	$(F32) $(F32FLAGS) /c RED.FOR

RESC.OBJ:	RESC.FOR $(RESC_DEP)
	$(F32) $(F32FLAGS) /c RESC.FOR

SCAL.OBJ:	SCAL.FOR $(SCAL_DEP)
	$(F32) $(F32FLAGS) /c SCAL.FOR

SETROT.OBJ:	SETROT.FOR $(SETROT_DEP)
	$(F32) $(F32FLAGS) /c SETROT.FOR

SETSUPR.OBJ:	SETSUPR.FOR $(SETSUPR_DEP)
	$(F32) $(F32FLAGS) /c SETSUPR.FOR

SORTEM.OBJ:	SORTEM.FOR $(SORTEM_DEP)
	$(F32) $(F32FLAGS) /c SORTEM.FOR

SQDIST.OBJ:	SQDIST.FOR $(SQDIST_DEP)
	$(F32) $(F32FLAGS) /c SQDIST.FOR

SRCHSUPR.OBJ:	SRCHSUPR.FOR $(SRCHSUPR_DEP)
	$(F32) $(F32FLAGS) /c SRCHSUPR.FOR

STRLEN.OBJ:	STRLEN.FOR $(STRLEN_DEP)
	$(F32) $(F32FLAGS) /c STRLEN.FOR

$(PROJ).LIB::	ACORNI.OBJ BACKTR.OBJ BEYOND.OBJ BLUE.OBJ CHKNAM.OBJ CHKTITLE.OBJ COVA3.OBJ \
	DLOCATE.OBJ DPOWINT.OBJ DSORTEM.OBJ GAUINV.OBJ GCUM.OBJ GETINDX.OBJ GETZ.OBJ GREEN.OBJ \
	HEXA.OBJ KSOL.OBJ KTSOL.OBJ LOCATE.OBJ NSCORE.OBJ NUMTEXT.OBJ ORDREL.OBJ PICKSUPR.OBJ \
	POWINT.OBJ PSFILL.OBJ PSLINE.OBJ PSTEXT.OBJ RAND.OBJ RED.OBJ RESC.OBJ SCAL.OBJ SETROT.OBJ \
	SETSUPR.OBJ SORTEM.OBJ SQDIST.OBJ SRCHSUPR.OBJ STRLEN.OBJ $(OBJS_EXT)
	echo >NUL @<<$(PROJ).CRF
-out:$@
ACORNI.OBJ
BACKTR.OBJ
BEYOND.OBJ
BLUE.OBJ
CHKNAM.OBJ
CHKTITLE.OBJ
COVA3.OBJ
DLOCATE.OBJ
DPOWINT.OBJ
DSORTEM.OBJ
GAUINV.OBJ
GCUM.OBJ
GETINDX.OBJ
GETZ.OBJ
GREEN.OBJ
HEXA.OBJ
KSOL.OBJ
KTSOL.OBJ
LOCATE.OBJ
NSCORE.OBJ
NUMTEXT.OBJ
ORDREL.OBJ
PICKSUPR.OBJ
POWINT.OBJ
PSFILL.OBJ
PSLINE.OBJ
PSTEXT.OBJ
RAND.OBJ
RED.OBJ
RESC.OBJ
SCAL.OBJ
SETROT.OBJ
SETSUPR.OBJ
SORTEM.OBJ
SQDIST.OBJ
SRCHSUPR.OBJ
STRLEN.OBJ

<<
	if exist $@ del $@
	link32 -lib @$(PROJ).CRF

$(PROJ).BSC: $(SBRS)
	bscmake @<<
/o$@ $(SBRS)
<<
